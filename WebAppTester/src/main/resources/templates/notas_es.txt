
#WebAppTester: Probador de formularios online
#El programa utiliza Selenium para abrir un navegador web y ejecuta en él, comandos escritos por el usuario.
#Descargue el controlador de Selenium para su navegador favorito (recuerde revisar la versión de su navegador) 
#desde https://www.selenium.dev/downloads/ y deje el controlador en la misma carpeta en que ejecutará el programa.
#Cada lí­nea que comienza con #, no se tiene en cuenta y será tratada como comentario.
#El programa lee la carpeta "scripts" y con todas las carpetas en su interior arma un árbol.
#El árbol se compone de carpetas y de acciones representadas en cada uno de los archivos con extension .txt en cada carpeta
#Si se encuentra un archivo _start.txt en una carpeta, se ejecutará ese archivo antes de ejecutar cualquier otra acción en la carpeta.
#Si se encuentra un archivo _end.txt en una carpeta, se ejecutará ese archivo después de ejecutar cualquier acción en la carpeta.
#Ejemplo de estructura
#[scripts]
#scripts/_start.txt
#scripts/_end.txt
#[scripts/administracion]
#scripts/administracion/_start.txt
#scripts/administracion/crearpregunta.txt
#scripts/administracion/listarpreguntas.txt
#
#Si desde el programa se solicita la ejecución del comando "scripts/administracion/listarpreguntas", el programa ejecutará
#los siguientes comandos en orden:
#scripts/_start.txt
#scripts/administracion/_start.txt
#scripts/administracion/listarpreguntas.txt
#scripts/_end.txt
#
#Los archivos _start.txt y _end.txt no son obligatorios, son solo una forma de colocar acciones como autenticarse antes de entrar a una 
#página en la cual se ejecutará un comando o cerrar sesión después de salir de cierta página
#
#Cada acción es un conjunto de instrucciones que serán ejecutadas por el navegador de internet.
#Cada instrucción tiene el formato "acción={comando}"
#[Acciones soportadas]
#Descomente los ejemplos a continuación para activar cada uno.
#ir - Abre una página internet. 
#Ejemplo:
#ir={https://duckduckgo.com/}
#esperar - Espera a que la página cargue completamente despues de un cambio de URL o despues de hacer clic en algun lado.
#esperará a que cierto objeto (dado su selector), aparezca o simplemente a que la página cargue completa
#Argumentos:
# - selector : El selector para el objeto a esperar. Puede ser un selector css o xpath
# - tipo (opcional): El tipo de selector que se está usando: "css/xpath". Si no se especifica, se usará css
#Ejemplos:
#esperar={}
#esperar={
#  "selector":"#duckbar",
#}
#esperar={
#  "selector":"//*[@id="search_form_input_homepage"]",
#  "tipo":"xpath"
#}
#escribir - Escribe texto en un componente de la pagina dado un selector css.
#Argumentos:
# - selector : El selector para el objeto en el cual escribir. Puede ser un selector css o xpath
# - texto : Lo que se va a escribir en el componente
# - tipo (opcional): El tipo de selector que se está usando: "css/xpath". Si no se especifica, se usará css
#Ejemplo:
#escribir={
# "selector":"#search_form_input_homepage",
# "texto":"inicio"
#}
#escribir={
# "selector":"#search_form_input_homepage",
# "tipo" : "css";
# "texto":"inicio"
#}
#Puede enviar comandos especiales (ALT, F1,ENTER, ESCAPE, etc)
#escribiendolo de la siguiente forma:
#[%Keys.CONTROL]
#Utilice las constantes definidas en https://www.selenium.dev/selenium/docs/api/java/org/openqa/selenium/Keys.html
#Si requiere enviar combinaciones de comandos, puede escribirlo así:
#[%Keys.CONTROL,Keys.ALT]
#Además puede agregar otras letras así:
#[%Keys.CONTROL,Keys.ALT]r
#Ejemplo:
#escribir={
# "selector":"#search_form_input_homepage",
# "texto":"[%Keys.CONTROL,Keys.ALT]r"
#}
#Si necesita escribir el texto "[%", sin referirse a ningún comando, escríbalo así:
#"[%%"
#
#clic - Hace clic en un componente de la pagina dado un selector css.
#Argumentos:
#- selector : (Opcional) El selector para el objeto sobre el cual hacer clic. Puede ser un selector css o xpath
# - tipo (opcional): El tipo de selector que se está usando: "css/xpath". Si no se especifica, se usará css
#Si no se especifica un selector, se lanza el evento clic donde quiera que esté ubicado el cursor.
#Ejemplo:
#clic={ 
#  "selector":"#search_button_homepage"
#}
#
#doble clic - Hace doble clic en algun elemento de la pagina, dado su selector.
#Argumentos:
#- selector : (Opcional) El selector para el objeto sobre el cual hacer doble clic. Puede ser un selector css o xpath
# - tipo (opcional): El tipo de selector que se está usando: "css/xpath". Si no se especifica, se usará css
#Si no se especifica un selector, se lanza el evento doble clic donde quiera que esté ubicado el cursor.
#Ejemplo:
#doble clic={
#    "selector": "/html/body",
#     "tipo": "xpath"
#}
#
#clic derecho - Hace clic derecho en cualquier elemento de la pagina, dado su selector.
#Argumentos:
#- selector : (Opcional) El selector para el objeto sobre el cual hacer clic derecho. Puede ser un selector css o xpath
# - tipo (opcional): El tipo de selector que se está usando: "css/xpath". Si no se especifica, se usará css
#Si no se especifica un selector, se lanza el evento clic derecho donde quiera que esté ubicado el cursor.
#Ejemplo:
#clic derecho={
#    "selector": "#Identificacion"
#}
#
# ubicar puntero raton - Ubica el puntero del ratón en una posición específica
#Parametros:
 #- tipoMovimiento (opcional): Una de las siguientes opciones:
#    FROM_UL_CORNER (por omisión)- Para ubicar el puntero en una posición relativa a la esquina superior izquierda.
#    FROM_CUR_LOCATION - Para ubicar el puntero moviéndolo desde su  ubicación actual.
#    FROM_CNTR_OBJECT - Para ubicarlo desde el centro de un objeto específico.
 #- x: el número de pixeles a desplazar horizontalmente(>0 a la derecha, <0 a la izquierda)
 #- y: el número de pixeles a desplazar verticalmente(>0 abajo, <0 arriba)
 #- selector (opcional): El selector para el objeto sobre el cual hacer el desplazamiento. Si no se especifica se toma la página activa (body).
#Sólo utilizar con FROM_CNTR_OBJECT
 #- tipo (opcional): El tipo de selector que se está usando: "css/xpath". Si no se especifica, se usará css
#
#Ejemplos:
#```
#ubicar puntero raton={
#    "tipoMovimiento":"FROM_UL_CORNER",
#    "x":"150",
#    "y":"350"
#}
#```
#```
#ubicar puntero raton={
#    "tipoMovimiento":"FROM_CNTR_OBJECT",
#    "x":"150",
#    "y":"350",
#    "selector":"img:nth-of-type(2)"
#}
#```
#
#desplazar - Realiza un desplazamiento por la pantalla horizontalmente (x) o verticalmente (Y)
# una cierta cantidad de pixeles.
#Argumentos:
# - x: el número de pixeles a desplazar horizontalmente(>0 a la derecha, <0 a la izquierda)
# - y: el número de pixeles a desplazar verticalmente(>0 abajo, <0 arriba)
# - selector (opcional): El selector para el objeto sobre el cual hacer el desplazamiento. Si no se especifica se toma la página activa (body)
# - tipo (opcional): El tipo de selector que se está usando: "css/xpath". Si no se especifica, se usará css
#Ejemplos:
#
#desplazar={
#   "x":"0",
#   "y":"100"
#}
#
#desplazar={
#   "x":"10",
#   "y":"-100"
#}
#
#desplazar={
#   "x":"10",
#   "y":"-100",
#   "selector":"//*[@id='main-content-inner']",
#   "tipo": "xpath"
#}
#
#pausa - Espera cierto tiempo, antes de continuar con la siguiente instrucción.
#Argumentos:
#tiempo: NUMERO UNIDADES, donde UNIDADES puede tener uno de los siguientes valores: S=milisegundos,s=segundos, m=minutos, h=horas, d=dias
#Ejemplos:
#Para esperar 3 segundos
#pausa={"tiempo":"3 s"}
#Para esperar 10 minutos
#pausa={"tiempo":"10 m"}
#
#seleccionar opcion - Pide al usuario seleccionar una opción de una lista y guarda el valor seleccionado
#en una variable.
#Argumentos:
#- selector: Obligatorio. El selector css que corresponde a los elementos HTML a mostrar</ol>
#- subselector: Opcional. Ruta complementaria, para determinar el valor de cada opciòn.
# - tipo (opcional): El tipo de selector que se está usando en selector y subselector:  "css/xpath". Si no se especifica, se usará css
#  que se mostrará al usuario. Por omisiòn se tomará el texto de cada elemento
#  web asociado con la ruta en el parámetro "selector"
#- variable: Obligatorio. Nombre de la variable que se va a asignar con el elemento que el usuario
#  seleccione
#- titulo: Opcional. Título que tendrá la caja de texto que se va a mostrar al usuario.
#- mensaje: Opcional. Mensaje a mostrar en la caja de texto que se va a mostrar al usuario.
#- orden alfabetico: Opcional. ordenar alfabèticamente las opciones a mostrar (si/no)
#
#Ejemplo:
#seleccionar opcion={
# "selector":"div.central-featured-lang",
# "subselector": "a",
# "orden alfabetico":"yes",
# "titulo":"Wikipedia",
# "mensaje":"Seleccione un lenguaje",
# "variable":"Lenguaje"
#}
#
#Asignar variable - Es una forma de guardar texto asociado a un nombre.
#Argumentos:
#-nombre : Nombre que tendrá la variable. Caracteres permitidos en el nombre: números, letras y los signos _ -. Ejemplos:"MI_CLAVE","commentario-02"
#-valor : El texto a ingresar en esa variable
#
#Ejemplo:
#asignar={"nombre":"comentario","valor":"Me gusta esto"}
#
#Cambiar de navegador: Puede cambiar entre los siguientes navegadores:
# - CHROME,
# - EDGE,
# - FIREFOX,
# - INTERNET_EXPLORER,
# - OPERA,
# - SAFARI
#Ejemplo:
#navegador={SAFARI}
#
# Nota: al abrirse el nuevo navegador, iniciará en la página predeterminada, perdiendo cualquier navegación o autenticación realizada
# previamente.
#
#Variables
#Utilice variables ya definidas como parte de sus instrucciones colocando el nombre 
#de la variable entre los signos [] así: [:NOMBRE_VARIABLE]
#Ejemplo:
#clic={
# "selector":"[:Lenguaje] > a"
#}
#
#Contraseñas
#Cuando necesite incluir alguna palabra en un comando, sin que otra persona pueda verla, utilice el botón 
#"Encriptar contraseña" de la aplicaciòn y escriba el resultado así en su archivo de comandos:
#[$SU_CONTRASEÑA_ENCRIPTADA]
#Recuerde: la palabra (hash) usada para desencriptar una contraseña, varía de un equipo a otro.
#Ejemplo:
#
#escribir={
# "selector":"#pwd",
# "texto":"[$1nBI+Edj/WttkFqNjWZ5UQ==]"
#}
#
#Problemas conocidos:
#- Los selectores no funcionarán dentro de elementos IFRAME.
#
#Referencias de Selectores: 
# https://w3.org/wiki/CSS_/_Selectores_CSS
# https://www.w3schools.com/cssref/css_selectors.asp
# https://www.w3schools.com/xml/xpath_syntax.asp
# https://docs.scrapy.org/en/latest/topics/selectors.html
